{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\FE_EPL\\\\src\\\\pages\\\\auth\\\\login\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from 'axios';\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport './style.scss';\nimport { Button, FormFeedback, Input } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  email: yup.string().email().required(\"Email isn't valid.\"),\n  password: yup.string().min(8).required()\n});\nexport default function LoginPage() {\n  _s();\n\n  const handleLogin = async () => {\n    const data = formik.values; // await axios.post('http://localhost:8080/login', data)\n    //     .then(res =>{\n    //         localStorage.setItem('access_token', res.data.accessToken)\n    //         window.location = \"/home\"\n    //     })\n    //     .catch(err =>{\n    //         console.error(err)\n    //     })\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      'email': '',\n      'password': ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: () => handleLogin()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"desc\",\n        children: \"Welcome to Mydashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), Object.keys(formik.initialValues).map((key, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-input\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: key === \"password\" ? \"password\" : \"text\",\n          id: key,\n          name: key,\n          placeholder: key,\n          value: formik.values[key],\n          onChange: formik.handleChange,\n          invalid: formik.touched[key] && Boolean(formik.errors[key])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), formik.touched[key] && Boolean(formik.errors[key]) && /*#__PURE__*/_jsxDEV(FormFeedback, {\n          className: \"error-feedback\",\n          children: formik.errors[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-submit\",\n        type: \"submit\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["D:/GitHub/FE_EPL/src/pages/auth/login/index.jsx"],"names":["React","axios","useFormik","yup","Button","FormFeedback","Input","validationSchema","object","shape","email","string","required","password","min","LoginPage","handleLogin","data","formik","values","initialValues","onSubmit","handleSubmit","Object","keys","map","key","idx","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport axios from 'axios';\r\nimport { useFormik } from \"formik\"\r\nimport * as yup from \"yup\"\r\n\r\nimport './style.scss'\r\nimport { Button, FormFeedback, Input } from \"reactstrap\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup.string().email().required(\"Email isn't valid.\"),\r\n    password: yup.string().min(8).required()\r\n})\r\nexport default function LoginPage() {\r\n    const handleLogin = async () => {\r\n        const data = formik.values;\r\n        // await axios.post('http://localhost:8080/login', data)\r\n        //     .then(res =>{\r\n        //         localStorage.setItem('access_token', res.data.accessToken)\r\n        //         window.location = \"/home\"\r\n        //     })\r\n        //     .catch(err =>{\r\n        //         console.error(err)\r\n        //     })\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            'email': '',\r\n            'password': ''\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: () => handleLogin()\r\n    });\r\n\r\n    return(\r\n        <div className=\"login-page\">\r\n            <form className=\"form-container\" onSubmit={formik.handleSubmit}>\r\n                <h1 className=\"title\">Login</h1>\r\n                <p className=\"desc\">Welcome to Mydashboard</p>\r\n                {\r\n                    Object.keys(formik.initialValues).map((key,idx) => (\r\n                        <div key={idx} className=\"row-input\">\r\n                            <Input\r\n                                type={key===\"password\" ? \"password\" : \"text\"}\r\n                                id={key}\r\n                                name={key}\r\n                                placeholder={key}\r\n                                value={formik.values[key]}\r\n                                onChange={formik.handleChange}\r\n                                invalid={formik.touched[key] && Boolean (formik.errors[key])}\r\n                            />\r\n                            {\r\n                                formik.touched[key] && Boolean(formik.errors[key]) &&\r\n                                <FormFeedback className=\"error-feedback\">{formik.errors[key]}</FormFeedback>\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n                <Button className=\"btn-submit\" type=\"submit\">login</Button> \r\n                <p className=\"signup\">\r\n                    Don't have an account? <a href=\"/register\">Signup</a>\r\n                </p>   \r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}