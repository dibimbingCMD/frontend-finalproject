{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\FE_EPL\\\\src\\\\pages\\\\auth\\\\login\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport './style.scss';\nimport { Button, FormFeedback, Input } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  email: yup.string().email().required(\"Email isn't valid.\"),\n  password: yup.string().min(9).required()\n});\nexport default function LoginPage() {\n  _s();\n\n  const handleLogin = async () => {\n    const data = formik.values;\n    await axios.post('http://localhost:8000/login', data).then(res => {\n      if (res.data) {\n        localStorage.setItem('access_token', res.data.token);\n        window.location = `/dashboard/${res.data._id}`;\n        console.log(res.data);\n      } else {\n        alert(\"email or password is wrong!\");\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: () => handleLogin()\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"desc\",\n        children: \"Welcome to Mydashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), Object.keys(formik.initialValues).map((key, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-input\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: key === 'password' ? 'password' : 'text',\n          id: key,\n          name: key,\n          placeholder: key,\n          value: formik.values[key],\n          onChange: formik.handleChange,\n          invalid: formik.touched[key] && Boolean(formik.errors[key])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), formik.touched[key] && Boolean(formik.errors[key]) && /*#__PURE__*/_jsxDEV(FormFeedback, {\n          className: \"error-feedback\",\n          children: formik.errors[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 68\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-submit\",\n        type: \"submit\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["D:/GitHub/FE_EPL/src/pages/auth/login/index.jsx"],"names":["React","axios","useFormik","yup","Button","FormFeedback","Input","validationSchema","object","shape","email","string","required","password","min","LoginPage","handleLogin","data","formik","values","post","then","res","localStorage","setItem","token","window","location","_id","console","log","alert","catch","err","error","initialValues","onSubmit","handleSubmit","Object","keys","map","key","idx","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport './style.scss';\r\nimport { Button, FormFeedback, Input } from 'reactstrap';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  email: yup.string().email().required(\"Email isn't valid.\"),\r\n  password: yup.string().min(9).required(),\r\n});\r\nexport default function LoginPage() {\r\n  const handleLogin = async () => {\r\n    const data = formik.values;\r\n    await axios\r\n      .post('http://localhost:8000/login', data)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          localStorage.setItem('access_token', res.data.token);\r\n          window.location = `/dashboard/${res.data._id}`;\r\n          console.log(res.data);\r\n        } else {\r\n          alert(\"email or password is wrong!\")\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: () => handleLogin(),\r\n  });\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <form className=\"form-container\" onSubmit={formik.handleSubmit}>\r\n        <h1 className=\"title\">Login</h1>\r\n        <p className=\"desc\">Welcome to Mydashboard</p>\r\n        {Object.keys(formik.initialValues).map((key, idx) => (\r\n          <div key={idx} className=\"row-input\">\r\n            <Input type={key === 'password' ? 'password' : 'text'} id={key} name={key} placeholder={key} value={formik.values[key]} onChange={formik.handleChange} invalid={formik.touched[key] && Boolean(formik.errors[key])} />\r\n            {formik.touched[key] && Boolean(formik.errors[key]) && <FormFeedback className=\"error-feedback\">{formik.errors[key]}</FormFeedback>}\r\n          </div>\r\n        ))}\r\n        <Button className=\"btn-submit\" type=\"submit\">\r\n          login\r\n        </Button>\r\n        <p className=\"signup\">\r\n          Don't have an account? <a href=\"/register\">Signup</a>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}