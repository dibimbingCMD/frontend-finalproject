{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daulay\\\\Desktop\\\\frontend-finalproject\\\\src\\\\components\\\\pages\\\\register\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport './style.scss';\nimport { Button, FormFeedback, Input } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  email: yup.string().email().required(\"Email salah\"),\n  username: yup.string().min(8).required(),\n  address: yup.string(),\n  phone_number: yup.number(),\n  password: yup.string().min(8).required(),\n  retypePassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match')\n});\nexport default function RegisterPage() {\n  _s();\n\n  const handleRegister = async e => {\n    const {\n      id,\n      join_date,\n      email,\n      username,\n      address,\n      phone_number,\n      password\n    } = formik.values; // await axios.post('http://localhost:8080/register', {\n    //     id,\n    //     join_date,\n    //     email,\n    //     username,\n    //     address,\n    //     phone_number,\n    //     password\n    // })\n    //     .then(() => {\n    //         window.location = '/'\n    //     })\n    //     .catch((err) => console.error(err));\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      'id': Math.floor(Math.random() * Math.random() * 1000000000),\n      'join_date': Date(),\n      'email': '',\n      'username': '',\n      'address': '',\n      'phone_number': '',\n      'password': '',\n      'retypePassword': ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: () => handleRegister()\n  });\n  const [formRegister, setFormRegister] = useState(formik.initialValues);\n  useEffect(() => {\n    const formInput = Object.assign({}, formik.initialValues);\n    delete formInput.id;\n    delete formInput.join_date;\n    setFormRegister(formInput);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-page\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"desc\",\n        children: \"Welcome to Mydashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), Object.keys(formRegister).map((key, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-input\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: key === \"password\" || key === \"retypePassword\" ? \"password\" : \"text\",\n          id: key,\n          name: key,\n          placeholder: key,\n          value: formik.values[key],\n          onChange: formik.handleChange,\n          invalid: formik.touched[key] && Boolean(formik.errors[key])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), formik.touched[key] && Boolean(formik.errors[key]) && /*#__PURE__*/_jsxDEV(FormFeedback, {\n          className: \"error-feedback\",\n          children: formik.errors[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-submit\",\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signup\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterPage, \"N3AaCeKCQRGqV5tgP96wQIIVmqE=\", false, function () {\n  return [useFormik];\n});\n\n_c = RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["C:/Users/Daulay/Desktop/frontend-finalproject/src/components/pages/register/index.jsx"],"names":["React","useEffect","useState","axios","useFormik","yup","Button","FormFeedback","Input","validationSchema","object","shape","email","string","required","username","min","address","phone_number","number","password","retypePassword","oneOf","ref","RegisterPage","handleRegister","e","id","join_date","formik","values","initialValues","Math","floor","random","Date","onSubmit","formRegister","setFormRegister","formInput","Object","assign","handleSubmit","keys","map","key","idx","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport axios from 'axios';\r\nimport { useFormik } from \"formik\"\r\nimport * as yup from \"yup\"\r\n\r\nimport './style.scss'\r\nimport { Button, FormFeedback, Input } from \"reactstrap\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup.string().email().required(\"Email salah\"),\r\n    username: yup.string().min(8).required(),\r\n    address: yup.string(),\r\n    phone_number: yup.number(),\r\n    password: yup.string().min(8).required(),\r\n    retypePassword: yup.string()\r\n      .oneOf([yup.ref('password'), null], 'Passwords must match'),\r\n});\r\nexport default function RegisterPage() {\r\n    const handleRegister = async (e) => {\r\n        const {id, join_date, email, username, address, phone_number, password} = formik.values;\r\n        // await axios.post('http://localhost:8080/register', {\r\n        //     id,\r\n        //     join_date,\r\n        //     email,\r\n        //     username,\r\n        //     address,\r\n        //     phone_number,\r\n        //     password\r\n        // })\r\n        //     .then(() => {\r\n        //         window.location = '/'\r\n        //     })\r\n        //     .catch((err) => console.error(err));\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            'id': Math.floor(Math.random() * Math.random() * 1000000000),\r\n            'join_date':Date(),\r\n            'email': '',\r\n            'username': '',\r\n            'address': '',\r\n            'phone_number': '',\r\n            'password': '',\r\n            'retypePassword' : ''\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: () => handleRegister()\r\n    });\r\n    const [formRegister, setFormRegister] = useState(formik.initialValues);\r\n\r\n    useEffect(() => {\r\n        const formInput = Object.assign({}, formik.initialValues);\r\n        delete formInput.id;\r\n        delete formInput.join_date;\r\n        setFormRegister(formInput);\r\n    }, []);\r\n    return(\r\n        <div className=\"register-page\">\r\n            <form className=\"form-container\" onSubmit={formik.handleSubmit}>\r\n                <h1 className=\"title\">Register</h1>\r\n                <p className=\"desc\">Welcome to Mydashboard</p>\r\n                {\r\n                    Object.keys(formRegister).map((key,idx) => (\r\n                        <div key={idx} className=\"row-input\">\r\n                            <Input\r\n                                type={key===\"password\" || key === \"retypePassword\" ? \"password\" : \"text\"}\r\n                                id={key}\r\n                                name={key}\r\n                                placeholder={key}\r\n                                value={formik.values[key]}\r\n                                onChange={formik.handleChange}\r\n                                invalid={formik.touched[key] && Boolean (formik.errors[key])}\r\n                            />\r\n                            {\r\n                                formik.touched[key] && Boolean(formik.errors[key]) &&\r\n                                <FormFeedback className=\"error-feedback\">{formik.errors[key]}</FormFeedback>\r\n                            }\r\n                        </div>\r\n                    ))\r\n                }\r\n                <Button className=\"btn-submit\" type=\"submit\">Create</Button> \r\n                <p className=\"signup\">\r\n                    Already have an account? <a href=\"/login\">Login</a>\r\n                </p>   \r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}